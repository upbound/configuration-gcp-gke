apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xgke.gcp.platform.upbound.io
  labels:
    provider: gcp
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: gcp.platform.upbound.io/v1alpha1
    kind: XGKE
  mode: Pipeline
  pipeline:
    - step: patch-and-transform
      functionRef:
        name: crossplane-contrib-function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        patchSets:
          - name: providerConfigRef
            patches:
              - fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name
                type: FromCompositeFieldPath
          - name: deletionPolicy
            patches:
              - fromFieldPath: spec.parameters.deletionPolicy
                toFieldPath: spec.deletionPolicy
                type: FromCompositeFieldPath
          - name: region
            patches:
              - fromFieldPath: spec.parameters.region
                toFieldPath: spec.forProvider.location
                type: FromCompositeFieldPath
        resources:
          - name: serviceaccount
            base:
              apiVersion: cloudplatform.gcp.upbound.io/v1beta1
              kind: ServiceAccount
            patches:
              - type: PatchSet
                patchSetName: providerConfigRef
              - type: PatchSet
                patchSetName: deletionPolicy
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: metadata.annotations[crossplane.io/external-name]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.displayName
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.email
                toFieldPath: status.gke.serviceAccount
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.id
                toFieldPath: status.gke.project
                transforms:
                  - type: string
                    string:
                      regexp:
                        group: 1
                        match: projects\/(.+)\/serviceAccounts\/.*
                      type: Regexp

          - name: serviceaccountkey
            base:
              apiVersion: cloudplatform.gcp.upbound.io/v1beta1
              kind: ServiceAccountKey
              spec:
                forProvider:
                  serviceAccountIdSelector:
                    matchControllerRef: true
            patches:
              - type: PatchSet
                patchSetName: providerConfigRef
              - type: PatchSet
                patchSetName: deletionPolicy
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.uid
                toFieldPath: spec.writeConnectionSecretToRef.name
                transforms:
                  - type: string
                    string:
                      fmt: '%s-sakey'
                      type: Format
              - type: FromCompositeFieldPath
                fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.writeConnectionSecretToRef.namespace

          - name: projectiammember
            base:
              apiVersion: cloudplatform.gcp.upbound.io/v1beta1
              kind: ProjectIAMMember
              spec:
                forProvider:
                  role: roles/container.admin
            patches:
              - type: PatchSet
                patchSetName: providerConfigRef
              - type: PatchSet
                patchSetName: deletionPolicy
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: metadata.annotations[crossplane.io/external-name]
              - type: FromCompositeFieldPath
                fromFieldPath: status.gke.serviceAccount
                toFieldPath: spec.forProvider.member
                policy:
                  fromFieldPath: Required
                transforms:
                  - type: string
                    string:
                      fmt: serviceAccount:%s
                      type: Format
              - type: FromCompositeFieldPath
                fromFieldPath: status.gke.project
                toFieldPath: spec.forProvider.project
                policy:
                  fromFieldPath: Required

          - name: gkecluster
            base:
              apiVersion: container.gcp.upbound.io/v1beta1
              kind: Cluster
              spec:
                forProvider:
                  enableIntranodeVisibility: true
                  initialNodeCount: 1
                  ipAllocationPolicy:
                    - clusterSecondaryRangeName: pods
                      servicesSecondaryRangeName: services
                  loggingService: logging.googleapis.com/kubernetes
                  monitoringService: monitoring.googleapis.com/kubernetes
            connectionDetails:
              - fromConnectionSecretKey: kubeconfig
                name: kubeconfig
                type: FromConnectionSecretKey
            patches:
              - type: PatchSet
                patchSetName: providerConfigRef
              - type: PatchSet
                patchSetName: deletionPolicy
              - type: PatchSet
                patchSetName: region
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.uid
                toFieldPath: spec.writeConnectionSecretToRef.name
                transforms:
                  - type: string
                    string:
                      fmt: '%s-gkecluster'
                      type: Format
              - type: FromCompositeFieldPath
                fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.writeConnectionSecretToRef.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.networkSelector.matchLabels[networks.gcp.platform.upbound.io/network-id]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.subnetworkSelector.matchLabels[networks.gcp.platform.upbound.io/network-id]
              - type: FromCompositeFieldPath
                fromFieldPath: status.gke.serviceAccount
                toFieldPath: spec.forProvider.nodeConfig[0].serviceAccount
                policy:
                  fromFieldPath: Required
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.version
                toFieldPath: spec.forProvider.nodeVersion
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.version
                toFieldPath: spec.forProvider.minMasterVersion

          - name: node-pool
            base:
              apiVersion: container.gcp.upbound.io/v1beta1
              kind: NodePool
              spec:
                forProvider:
                  autoscaling:
                    - maxNodeCount: 1
                      minNodeCount: 1
                  clusterSelector:
                    matchControllerRef: true
                  initialNodeCount: 1
                  management:
                    - autoRepair: true
                      autoUpgrade: true
                  maxPodsPerNode: 55
                  nodeConfig:
                    - diskSizeGb: 10
                      imageType: COS_CONTAINERD
                      machineType: e2-medium
                      metadata:
                        disable-legacy-endpoints: "true"
                      oauthScopes:
                        - https://www.googleapis.com/auth/cloud-platform
                      preemptible: true
                      shieldedInstanceConfig:
                        - enableIntegrityMonitoring: true
                          enableSecureBoot: true
            patches:
              - type: PatchSet
                patchSetName: providerConfigRef
              - type: PatchSet
                patchSetName: deletionPolicy
              - type: PatchSet
                patchSetName: region
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.nodes.instanceType
                toFieldPath: spec.forProvider.nodeConfig[0].machineType
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.nodes.count
                toFieldPath: spec.forProvider.initialNodeCount
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.nodes.count
                toFieldPath: spec.forProvider.autoscaling[0].minNodeCount
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.nodes.count
                toFieldPath: spec.forProvider.autoscaling[0].maxNodeCount
              - type: FromCompositeFieldPath
                fromFieldPath: status.gke.serviceAccount
                toFieldPath: spec.forProvider.nodeConfig[0].serviceAccount
                policy:
                  fromFieldPath: Required

          - name: providerConfigHelm
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: ProviderConfig
              spec:
                credentials:
                  secretRef:
                    key: kubeconfig
                  source: Secret
                identity:
                  secretRef:
                    key: private_key
                  source: Secret
                  type: GoogleApplicationCredentials
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.credentials.secretRef.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.uid
                toFieldPath: spec.credentials.secretRef.name
                transforms:
                  - type: string
                    string:
                      fmt: '%s-gkecluster'
                      type: Format
              - type: FromCompositeFieldPath
                fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.identity.secretRef.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.uid
                toFieldPath: spec.identity.secretRef.name
                transforms:
                  - type: string
                    string:
                      fmt: '%s-sakey'
                      type: Format
            readinessChecks:
              - type: None

          - name: providerConfigKubernetes
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: ProviderConfig
              spec:
                credentials:
                  secretRef:
                    key: kubeconfig
                  source: Secret
                identity:
                  secretRef:
                    key: private_key
                  source: Secret
                  type: GoogleApplicationCredentials
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.credentials.secretRef.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.uid
                toFieldPath: spec.credentials.secretRef.name
                transforms:
                  - type: string
                    string:
                      fmt: '%s-gkecluster'
                      type: Format
              - type: FromCompositeFieldPath
                fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.identity.secretRef.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.uid
                toFieldPath: spec.identity.secretRef.name
                transforms:
                  - type: string
                    string:
                      fmt: '%s-sakey'
                      type: Format
            readinessChecks:
              - type: None
